1.函数
   1.1什么是函数
    函数就是将一些代码进行重用的机制
   1.2 函数的基本语法
     func 函数名(参数列表) 返回值{
         函数体
     } 
      func 关键字 不能少
      函数名不能重名 圆括号 还有花括号
      大小写区分
   
    func run(){
       fmt.Println("跑")
    }

2.函数参数
 2.1 普通参数
  func  test(a int,b int){  //形参
    fmt.Println(a,b)
  }    

  test(1,2) //实参  参数类型 也必须匹配

3. 不定参数
   //args 参数 随便起   ... int  不定参数
   //args 相当于一个集合    可是0 个或者多个
   func  sum(args ... int){
         he:=0
         count:=len(args) //个数
         for i:=0;i<count;i++{
            he+=args[i]
         }
         fmt.Println(he)
   }  

    sum(1,2,3,4)

    注意事项： 不定参放在其他参数后面
              函数调用固定参数必须传值，不定参数根据需要决定是否传值

     func  sum(a int,args ... int){
         he:=0
         count:=len(args) //个数
         for i:=0;i<count;i++{
            he+=args[i]
         }
         fmt.Println(he)
   }  

    sum(1,2,3,4)


 4. 函数的嵌套使用
    1什么是函数嵌套
     在一个函数中调用另一个函数
    2.函数嵌套的执行过程

    func test2（args ... int）{
        test3(arrgs[:])   //全场参数
        test3(args[0],args[1]) 
        test3(args[0:4]...)   //从零取 4是下标
        test3(args...)
        test3(args ... int ) //会报错
    }

    func test3(args ... int){

    }

    func test（）{
      test2(1,1,2,3)
    }

5  函数返回值
   5.1   代码块需要 返回值需要初始化
    func test() int{
       var a int
        a=10
        return a 
    }    
   rs:=  test()
   5.2  返回参数有变量 不用初始化a
    func test()(a int){
       a=10
       return a
    }
    rs:=test()
  5.3    可以直接return  不用返回a  理论上就返回了
     func test()(a int){
        a=10
        return 
     }

  5.4 返回多个值
  func test(a,b int)(sum,jian int){
  sum=a+b
  jian=a-b
  return
}

   test(5,2)

  
